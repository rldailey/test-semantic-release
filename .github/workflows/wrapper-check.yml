
#  REFERENCES
#  https://github.com/liatrio/product-operator/blob/main/.github/workflows/post-release.yaml
#  https://github.com/liatrio/lead-terraform/blob/master/.github/workflows/release.yml

name: Wrapper Test

on:
  push:
    branches:
      - main
    paths:
      - 'modules/**'
      - 'stacks/**'
      - 'stages/**'
      - '.releaserc.yaml'
      - '.github/workflows/wrapper-check.yml'  
  workflow_dispatch:
env:
  GHCR_TOKEN: ${{ secrets.GHCR_DAILEYO_TOKEN }}
  GH_SEMANTIC_VERSION_TOKEN: ${{ secrets.GH_SEMANTIC_VERSION_TOKEN }}

concurrency:
  group: release

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.release.outputs.changed }}
      previousVersion: ${{ steps.release.outputs.previousVersion }}
      newVersion: ${{ steps.release.outputs.newVersion }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Yarn for Local Testing
        run: |
          npm install --location=global yarn

      - name: Release
        id: release
        uses: liatrio/github-actions/conventional-release@master
        env:
          GITHUB_TOKEN: ${{ env.GH_SEMANTIC_VERSION_TOKEN }}
          GH_TOKEN: ${{ env.GH_SEMANTIC_VERSION_TOKEN }}
          c: ${{ release.steps.release.outputs.changed }}
          pv: ${{ release.steps.release.outputs.previousVersion }}
          nv: ${{ release.steps.release.outputs.newVersion }}
      - name: Test outputs
        run: |
          echo "changed: $c"
          echo "previousVersion:  $pv"
          echo "newVersion: $nv"

  publish:
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.changed == 'true'
    steps:
      - name: blah
        env:
          changed: ${{ needs.release.outputs.changed }}
          newVersion: ${{ needs.release.outputs.newVersion }}
          previousVersion: ${{ needs.release.outputs.previousVersion }}
        run: |
          echo "*********************************************"
          echo "changed: $changed"
          echo "previousVersion:  $previousVersion"
          echo "newVersion: $newVersion"
          echo "*********************************************"
